"""That's some HTML hotness With the new html() decorator you can focus on writing simple functions
that return the information you want to display on the webpage and let the decorator take care of
wrapping them in the appropriate HTML tags."""

def html(open_tag, close_tag):
  def decorator(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
      msg = func(*args, **kwargs)
      return '{}{}{}'.format(open_tag, msg, close_tag)
    # Return the decorated function
    return wrapper
  # Return the decorator
  return decorator
# Make hello() return bolded text
@html("<b>", "</b> ")
def hello(name):
  return 'Hello {}!'.format(name)
  
print(hello('Menna'))
# Make goodbye() return italicized text
@html("<i>", "</i>")
def goodbye(name):
  return 'Goodbye {}.'.format(name)
  
print(goodbye('Menna'))
# Wrap the result of hello_goodbye() in <div> and </div>
@html("<div>","</div>")
def hello_goodbye(name):
  return '\n{}\n{}\n'.format(hello(name), goodbye(name))
  
print(hello_goodbye('Alice'))
